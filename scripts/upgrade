#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers
source _common.sh

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --time --weight=1

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)

user=$app
webuser="${user}web"

#=================================================
# CHECK VERSION
#=================================================

### This helper will compare the version of the currently installed app and the version of the upstream package.
### $upgrade_type can have 2 different values
### - UPGRADE_APP if the upstream app version has changed
### - UPGRADE_PACKAGE if only the YunoHost package has changed
### ynh_check_app_version_changed will stop the upgrade if the app is up to date.
### UPGRADE_APP should be used to upgrade the core app only if there's an upgrade to do.
upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# CHECK THE PATH
#=================================================

path_url=$(ynh_normalize_url_path --path_url=$path_url)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --time --weight=1

# If final_path doesn't exist, create it
if [ -z "$final_path" ]; then
    final_path=/var/www/$app
    ynh_app_setting_set --app=$app --key=final_path --value=$final_path
fi

# Get version
version=$ynh_app_package_version

if [ "${version}" = "2.3.4-1" ]; then
    ynh_save_args domain path ip4ranges port final_path iface dynamic_ip

    # Install official debian package
    ynh_app_dependencies openvpn,openvpn-auth-ldap,netmask

    # Delete old cron (replace by a iptables hooks)
    rm -f /etc/openvpn/yunohost.cron

    # Install configured files and restart services
    setup_and_restart

    yunohost service add "openvpn" --log /var/log/openvpn/status.log --description "OpenVPN server"

    mv /var/log/openvpn.log /var/log/openvpn/status.log
fi

if [ "${version}" = "2.3.4-2" ]; then
    touch /etc/openvpn/crl.pem
    mkdir -p /etc/openvpn/users
    touch /etc/openvpn/ip4_attribution.csv
    cp ../conf/handler.sh /etc/openvpn/handler.sh
    chown -R $user: /etc/openvpn
    chmod 640 /etc/openvpn/ip4_attribution.csv
    chmod u+x /etc/openvpn/handler.sh
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --time --weight=1

# Backup the current version of the app

ynh_backup_before_upgrade
ynh_clean_setup () {
    # restore it if the upgrade fails
    ynh_restore_upgradebackup
}

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================

# Normalize the URL path syntax
# N.B. : this is for app installations before YunoHost 2.7
# where this value might be something like /foo/ or foo/
# instead of /foo ....
# If nobody installed your app before 2.7, then you may
# safely remove this line
path_url=$(ynh_normalize_url_path --path_url=$path_url)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --time --weight=1

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading nginx web server configuration..." --time --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading php-fpm configuration..." --time --weight=1

# Create a dedicated php-fpm config
ynh_add_fpm_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --time --weight=1

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Making sure dedicated system users exists..." --time --weight=1

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir="/etc/openvpn/"
webuser=${app}web
ynh_system_user_create --username=$webuser --home_dir="$final_path"

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..." --time --weight=1

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# GENERIC FINALIZATION
#=================================================
# UPGRADE FAIL2BAN
#=================================================
ynh_script_progression --message="Configuring fail2ban..." --time --weight=1

# Create a dedicated fail2ban config
ynh_add_fail2ban_config --use_template --others_var="app port"

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Secure files and directories..." --time --weight=1

# Set permissions on app files
chown -R $webuser: "$final_path"
chmod -R 664 "$final_path"
find "$final_path" -type d -print0 | xargs -0 chmod 775

chown -R $webuser:www-data "$final_path"
chmod 640 "$final_path/$domain.conf"
chmod 640 "$final_path/$domain.ovpn"
chown -R $app: /var/log/openvpn
chown -R $app: /etc/openvpn
chmod 640 /etc/openvpn/users_settings.csv
chmod u+x /etc/openvpn/handler.sh

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --time --weight=1

ynh_systemd_action --service_name=openvpn --action=start

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Upgrade of $app completed" --time --last
