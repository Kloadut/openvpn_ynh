#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

#Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	#### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading settings..." --time --weight=1

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
ip4ranges=$(ynh_app_setting_get --app=$app --key=$ip4ranges)
iface=$(ynh_app_setting_get --app=$app --key=$iface)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..." --time --weight=1

ynh_webpath_available --domain=$domain --path_url=$path_url \
	|| ynh_die --message="Path not available: ${domain}${path_url}"
test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "


# Check if iptables is working
if ! iptables -L > /dev/null 2>&1
then
    ynh_die --message="iptables is not available in your environment, aborting..."
fi

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --time --weight=1

ynh_restore_file --origin_path="$final_path"

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
ynh_script_progression --message="Recreating the dedicated system user..." --time --weight=1

# Create the dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir="/etc/openvpn/"
webuser=${app}web
ynh_system_user_create --username=$webuser --home_dir="$final_path"

#=================================================
# RESTORE USER RIGHTS
#=================================================

# Restore permissions on app files
chown -R $webuser: "$final_path"

chown -R $webuser:www-data "$final_path"
chown -R $app: /var/log/openvpn
chown -R $app: /etc/openvpn

#=================================================
# RESTORE THE PHP-FPM CONFIGURATION
#=================================================

ynh_restore_file --origin_path="/etc/php/7.0/fpm/pool.d/$app.conf"

#=================================================
# RESTORE FAIL2BAN CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the fail2ban configuration..." --time --weight=1

ynh_restore_file "/etc/fail2ban/jail.d/$app.conf"
ynh_restore_file "/etc/fail2ban/filter.d/$app.conf"
ynh_systemd_action --action=restart --service_name=fail2ban

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Reinstalling dependencies..." --time --weight=1

# Define and install dependencies
ynh_install_app_dependencies $pkg_dependencies

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --log "/var/log/$app/$app.log"

#=================================================
# STUFF NOT YET SORTED...
#=================================================

# Ensure that tun device is still available, otherwise try to create it manually
if [ ! -c /dev/net/tun ]
then
    mkdir -p /dev/net
    mknod /dev/net/tun c 10 200
    chmod 666 /dev/net/tun
fi

# Add masquerade rules
ip4ranges_iptable=$(echo "$ip4ranges" | tr " " "\n")
iptables -t filter -A FORWARD -i "$iface" -o tun0 -m state --state ESTABLISHED,RELATED -j ACCEPT
for ip4range in $ip4ranges_iptable
do
    if ! (sudo /sbin/iptables -L -t nat | grep $ip4range | grep MASQUERADE > /dev/null 2>&1); then
        sudo iptables -t nat -A POSTROUTING -s $ip4range -o "$iface" -j MASQUERADE
        sudo iptables -t filter -A FORWARD -s $ip4range -o "$iface" -j ACCEPT
    fi
done

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================

ynh_restore_file --origin_path="/etc/logrotate.d/$app"

#=================================================
# RESTORE SPECIFIC FILES
#=================================================

ynh_restore_file --origin_path="/etc/openvpn"
ynh_restore_file --origin_path="/etc/yunohost/certs/$domain/dh.pem"
ynh_restore_file --origin_path="/etc/sysctl.d/openvpn.conf"
ynh_restore_file --origin_path="/var/log/openvpn"
sysctl -p /etc/sysctl.d/openvpn.conf

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --time --weight=1

yunohost service enable openvpn

# Start a systemd service
ynh_systemd_action --service_name=openvpn --action=start

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX AND PHP-FPM
#=================================================
ynh_script_progression --message="Reloading nginx web server and php-fpm..." --time --weight=1

ynh_systemd_action --service_name=php7.0-fpm --action=reload
ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --time --last
